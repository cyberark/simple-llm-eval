name: CI

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  push:
    branches: [main, ci-test]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend_changed: ${{ steps.frontend.outputs.changed }}

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2

      - name: Detect changes in frontend/
        id: frontend
        uses: ./.github/actions/detect-changes
        with:
          path: reports-frontend

  python-build:
    needs: detect-changes
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.11, 3.12, 3.13]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2

      - name: 🐍 Install uv with caching
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # 6.1.0
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          python-version: ${{ matrix.python-version }}

      - name: 📦 Install the project
        run: uv sync --locked --all-extras --dev

      - name: 👁️ Show versions
        run: python --version && uv --version

      - name: 🔍 Run pre-commit
        run: uv run pre-commit run -a --config .config/.pre-commit-config.yaml

      - name: 🔍 Run Radon complexity checks
        run: uv run radon cc -n B simpleval

      - name: 🔍 Run Xenon complexity checks
        run: uv run xenon --max-absolute B --max-modules B --max-average B simpleval

      - name: 🔍 Verify uv.lock <-> requirements.txt sync
        if: runner.os == 'Linux'
        run: uv run ci/scripts/validate_requirements_sync.py

      - name: 🧪 Run tests with coverage
        run: uv run pytest --cov=simpleval --cov-report=term --cov-report=xml --cov-fail-under=90

      - name: ⬆️ Upload coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # 4.6.2
        with:
          name: coverage-report
          path: coverage.xml

      - name: 📦 Build Project Package
        run: uv build

  frontend-build:
    needs: detect-changes
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18, 20, 22]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: reports-frontend
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2

      - name: ⬇️ Setup Node.js ${{ matrix.node-version }}
        if: needs.detect-changes.outputs.frontend_changed == 'true'
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # 4.4.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: reports-frontend/package-lock.json

      - name: 📦 Install dependencies
        if: needs.detect-changes.outputs.frontend_changed == 'true'
        run: npm install

      - name: 🛠️ Build project
        if: needs.detect-changes.outputs.frontend_changed == 'true'
        run: npm run build

      - name: 🔍 Audit for vulnerabilities
        if: needs.detect-changes.outputs.frontend_changed == 'true'
        run: npm audit --audit-level=low

      - name: 🧪 Run tests
        if: needs.detect-changes.outputs.frontend_changed == 'true'
        run: npm run test-no-watch

  update-badge:
    name: 🏷️ Update Coverage Badge
    needs: python-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
        with:
          fetch-depth: 0

      - name: 🐍 Install uv with caching
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # 6.1.0
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          python-version: ${{ matrix.python-version }}

      - name: ⬇️ Download coverage report
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # 4.3.0
        with:
          name: coverage-report

      - name: 🏷️ Generate coverage badge
        run: uv run python ./ci/badges/update_cov_badge.py coverage.xml

      - name: 🚀 Push badge to 'badges' branch
        run: |
          git config --global user.email "ci@github.com"
          git config --global user.name "GitHub CI"

          git fetch origin badges
          git switch badges || git switch -c badges origin/badges

          cp ci/badges/tmp/coverage.svg ci/badges/coverage-updated.svg

          git add ci/badges/coverage-updated.svg
          git commit -m "Update coverage badge [ci skip]" || echo "No changes to commit"
          git push origin badges
