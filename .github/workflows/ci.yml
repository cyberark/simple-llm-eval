name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main, ci-test]

jobs:
  python-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv with caching
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Show versions
        run: python --version && uv --version

      # - name: Run pre-commit
      #   run: uv run pre-commit run -a --config .config/.pre-commit-config.yaml

      # - name: Run Radon complexity checks
      #   run: uv run radon cc -n B simpleval

      # - name: Run Xenon complexity checks
      #   run: uv run xenon --max-absolute B --max-modules B --max-average B simpleval

      - name: Verify uv.lock <-> requirements.txt sync
        run: |
          # uv pip compile pyproject.toml --no-header --universal --no-cache -o ci/requirements-temp.txt
          uv export --format requirements-txt > ci/requirements-temp.txt
          if ! cmp -s requirements.txt ci/requirements-temp.txt; then
            diff -u requirements.txt ci/requirements-temp.txt || true
            echo "❌ requirements.txt is out of date. Run 'uv pip compile pyproject.toml --no-header --universal -o requirements.txt' and commit the changes."
            exit 1
          else
            echo "✅ requirements.txt is up to date."
          fi
