name: Release on PR Merge

on:
  pull_request:
    types:
      - closed

  # FOR TESTING REMOVE
  push:
    branches:
      - 'release/rc6'
  # FOR TESTING REMOVE ^^^^


jobs:
  check-release-pr:
    # if: github.event.pull_request.merged == true # Bring this back
    if: true # Remove this
    runs-on: ubuntu-latest
    steps:

      - name: 🔄 Checkout repository
        uses: actions/checkout@v4

      # bring this back
      # - name: 👀 Check PR Title and Label
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       const pr = context.payload.pull_request;
      #       const hasReleaseTitle = pr.title.includes('## FOR RELEASE ##');
      #       const hasReleaseLabel = pr.labels.some(label => label.name === 'release-me');

      #       Bring this back
      #       if (!(hasReleaseTitle && hasReleaseLabel)) {
      #         core.setFailed('PR does not have the required title and label');
      #       }

      - name: 🐍 Init uv with caching
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Get version from uv
        id: get_version
        run: |
          version=$(uv version --output-format json | jq -r '.version')
          # echo "version=$version" >> $GITHUB_OUTPUT # Bring this back
          echo "version=0.0.5" >> $GITHUB_OUTPUT # Remove this
          

      - name: 🏷️ Create Tags for Release
        run: |
          set -e  # Stop on error

          # Set up git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Checkout and update main
          git fetch origin main
          git checkout main
          git pull origin main

          # Get version from previous step
          version="${{ steps.get_version.outputs.version }}"
          tag_name="v$version"

          # Check if tag already exists
          if git rev-parse "$tag_name" >/dev/null 2>&1; then
            echo "Tag $tag_name already exists. Exiting."
            exit 0
          fi

          # Create and push annotated tag
          git tag -a "$tag_name" -m "Release version $tag_name"
          git push origin "$tag_name"

  