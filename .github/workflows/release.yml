name: 🚀 Release

permissions:
  contents: read

on:
  workflow_dispatch:
  # push:
  #   tags:
  #     - 'v*'  # Trigger only on version tags like v1.2.3
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
        with:
          fetch-depth: 0 # Include tag info

      - name: 🏷️ Get latest tag
        id: get_tag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: 🔄 Fetch gh-pages branch
        run: git fetch origin gh-pages:gh-pages

      - name: 🐍 Install uv with caching
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # 6.1.0
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: 📦 Install dev packages
        run: uv sync --locked --all-extras --dev

      - name: 🔎 Validate tag value
        run: |
          VERSION=${{ steps.get_tag.outputs.tag }}
          echo "::debug::VERSION=$VERSION"
          echo "Command: uv run ci/scripts/validate_tag.py $VERSION"
          uv run ci/scripts/validate_tag.py "$VERSION"

      - name: 📦 Build Project Package
        run: uv build

      - name: 🚀 Publish to PyPI
        if: false  # Done in a side pipeline
        env:
          UV_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          uv publish

      - name: 📚 Publish Docs
        run: |
          VERSION=${{ steps.get_tag.outputs.tag }}
          # Only publish docs on releases
          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Publishing docs for version $VERSION"
            ci/scripts/publish_docs.sh "$VERSION"
          else
            echo "Skipping docs publish: $VERSION is not a release version (x.y.z)"
          fi

      - name: 🔑 Import GPG Key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          echo "${{ secrets.GPG_OWNERTRUST }}" | gpg --import-ownertrust || true

      - name: 🔏 Sign the wheel(s)
        run: |
          for f in dist/*.{whl,tar.gz}; do
            gpg --batch --yes --armor --detach-sign "$f"
          done

      - name: List dist content
        run: ls dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # 2.2.2
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
