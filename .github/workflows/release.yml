name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger only on version tags like v1.2.3

# name: Release (Test)

# on:
#   push:
#     branches:
#       - feature/test-release-workflow  # Change as needed

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Include tag info

      - name: 🔄 Fetch gh-pages branch
        run: git fetch origin gh-pages:gh-pages

      - name: 🐍 Install uv with caching
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: 📦 Install dev packages
        run: uv sync --locked --all-extras --dev

      - name: 🔎 Validate tag value
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "::debug::VERSION=$VERSION"
          echo "Command: uv run ci/scripts/validate_tag.py $VERSION"
          uv run ci/scripts/validate_tag.py "$VERSION"

      - name: 📦 Build Project Package
        run: uv build

      - name: 🚀 Publish to PyPI
        if: false  # Done in a side pipeline
        env:
          UV_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          uv publish

      - name: 📚 Publish Docs
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          # Only publish docs on releases
          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Publishing docs for version $VERSION"
            ci/scripts/publish_docs.sh "$VERSION"
          else
            echo "Skipping docs publish: $VERSION is not a release version (x.y.z)"
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
